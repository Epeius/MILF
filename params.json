{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# Who's that girl?\r\nMILF is an IDA Pro plugin which automates several typical tasks in a RE session.\r\n\r\nIt has been written with a main focus on vulnerability discovery and security research. However a lot of her capabilities can be used in any generic RE project.\r\n\r\nIt's written in Python making use of the IDAPython API interface.\r\n\r\n# Anti-plagiarism Disclaimer :)\r\nSome of this code has been inspired by some work presented by Aaron Portnoy (of TippingPoint?) in Toorcon Seattle 2008. This has been pointed out within the code comments where pertinent.\r\n\r\n**Aaron, you are the man! :)**\r\n\r\n# What can she do?\r\n* Mark dangerous functions\r\n* Find immediate compares\r\n* Mark switches\r\n* Show paths between functions\r\n* Show paths between basic blocks within a function\r\n* Find File IO\r\n* Find Network IO\r\n* Find Allocations\r\n* Find dangerous „size params“\r\n* Create IDA (connection) graphs\r\n* Create „custom viewers“\r\n\r\n# Details\r\n* Mark dangerous functions\r\n   * Look for references to \"dangerous\" functions within a binary and colour them for easy spotting.\r\n   * For example: \"call memcpy\"\r\n* Find immediate compares\r\n   * Mark all immediate compares in the current function. This is specially useful when analysing a huge function we suspect acts as a parser.\r\n   * For example: cmp esi, 14h\r\n* Mark switches\r\n* Show paths between functions\r\n* Show paths between basic blocks within a function\r\n* Find File IO\r\n   * Find functions calling file i/o imports.\r\n* Find Network IO\r\n   * Find functions calling network i/o imports.\r\n* Find Allocations\r\n   * Find functions allocating/freeing memory.\r\n* Find dangerous „size params“\r\n   * Still a naive approach but interesting. Checks for calls to known problematic functions which accept a \"size\" parameter. If this argument is not a constant, it's worth it to take a look in case we can control it :)\r\n* Create IDA (connection) graphs\r\n   * A class for creating IDA embedded Graphs, showing the paths between two functions and some other info.\r\n* Create „custom viewers“\r\n   * Useful to display info (for example results of Find Network IO) in an embedded viewer within IDA Pro.\r\n* Integration with Intel PIN trace files\r\n* and much more","name":"Milf","tagline":"An IDA Pro swiss army knife (with a sexy name!)"}